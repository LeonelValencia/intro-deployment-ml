name: Continous Integration/Continous Deployment
on: [push]
jobs:
  ci_cd:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    env:
      REGISTRY_NAME: ${{ secrets.REGISTRY_NAME }}
      REGION: ${{ secrets.REGION }}
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      SERVICE_NAME: ${{ secrets.SERVICE_NAME }}
      SERVICE_ACCOUNT_KEY: ${{ secrets.SERVICE_ACCOUNT_KEY }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Set environment and bring the model
        run: |
          pip3 install virtualenv
          virtualenv venv
          source venv/bin/activate
          pip install dvc[gs]
          export GOOGLE_APPLICATION_CREDENTIALS=$(python utilities/setter.py)
          dvc pull model/model.pkl -r model-track
      - name: Read credentials JSON and set as env var
        run: |
          export CREDENTIALS_CONTENT=echo $GOOGLE_APPLICATION_CREDENTIALS
          echo "CREDENTIALS_CONTENT=$CREDENTIALS_CONTENT" >> $GITHUB_ENV
      - name: Authenticate with gcloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ env.CREDENTIALS_CONTEN }}
          # project_id: ${{ secrets.PROJECT_ID }}
      - name: Set up GCLOUD SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.PROJECT_ID }}
      - name: Build and push
        run: |
          docker build . -t $REGISTRY_NAME:$GITHUB_SHA
          gcloud auth configure-docker -q
          sudo -u $USER docker push $REGISTRY_NAME:$GITHUB_SHA
      - name: Deploy to Cloud Run
        run: |
          gcloud run services update $SERVICE_NAME \
          --image $REGISTRY_NAME:$GITHUB_SHA \
          --platform managed \
          --region $REGION \
          --allow-unauthenticated